name: "Local Publish Nuget"
description: "Local Github action used to publish nuget packages to the private github nuget repository."

inputs:
  githubToken:
    description: "Access token provided by the calling action context, used to publish the packages and push the corresponding tag."
    required: true
  packageReadonlyPat:
    description: "Personal access token used to access the github private nuget source."
    required: true
  debuggable:
    description: "Set to false if you want a non debuggable (Release) package. Default is true."
    required: false
    default: "true"
  semverIncrementLevel:
    description: "Level of the semver (major.minor.patch) to be increased to get the new package version."
    required: false
    default: "patch"

runs:
  using: "composite"
  steps:
    - name: Checkout calling repo
      uses: actions/checkout@v3

    - name: Set compilation mode
      shell: bash
      id: comp-mode
      run: |
        if [ [${{ inputs.debuggable }} == f*] -o [${{ inputs.debuggable }} == F*] ]; then
          COMP_MODE=Release
        else
          COMP_MODE=Debug
        fi
        echo "compilationMode=$COMP_MODE" >> $GITHUB_OUTPUT
        echo "compilation mode set to ${{steps.comp-mode.outputs.compilationMode}}"

    - name: Bump version
      id: bumpVersion
      uses: ./github-actions/get-tag
      with:
        semverIncrementLevel: ${{ inputs.semverIncrementLevel }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.x

    - name: Add github nuget source
      shell: bash
      run: dotnet nuget add source "https://nuget.pkg.github.com/trakx/index.json"
                  --name "github"
                  --username "trakx-bot"
                  --password ${{inputs.packageReadonlyPat}}
                  --store-password-in-clear-text

    - name: Install dependencies
      shell: bash
      run: |
        for f in $(find . -name "*.sln"); do echo "restoring solution $f" && \
        dotnet restore $f
        done

    - name: Remove github source
      shell: bash
      run: dotnet nuget remove source "github"

    - name: Build
      shell: bash
      run: |
        for f in $(find . -name "*.sln"); do echo "building solution $f" && \
          dotnet build $f \
            --configuration ${{steps.comp-mode.outputs.compilationMode}} \
            -p:Version=${{steps.bumpVersion.outputs.assemblyVersion}} \
            -p:SourceRevisionId=${{steps.bumpVersion.outputs.productVersion}} \
            --no-restore
        done

    - name: Package
      shell: bash
      run: |
        for project in $(find ./src -name "*.csproj" -exec grep -rl "Packable.Projects.props" {} \;); do echo "packaging project $project" && \
          dotnet pack $project --no-build --configuration ${{ steps.comp-mode.outputs.compilationMode }} \
            --output ./nuget/ -p:PackageVersion=${{steps.bumpVersion.outputs.fullVersion}} --include-symbols --include-source
        done

    - name: Publish
      shell: bash
      run: |
        ls ./nuget/*.nupkg
        for f in ./nuget/*.symbols.nupkg; \
          do echo "pushing $f file.." \
          && dotnet nuget push $f --api-key ${{inputs.githubToken}} --source "https://nuget.pkg.github.com/trakx/index.json"; 
        done

    - name: Push version tag
      id: pushTag
      uses: ./github-actions/push-tag
      with:
        tag: v${{steps.bumpVersion.outputs.fullVersion}}
        githubToken: ${{inputs.githubToken}}
